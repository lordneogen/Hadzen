# Generated by Django 4.2 on 2023-04-10 14:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('text_in', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('img', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Блог',
                'verbose_name_plural': 'Блоги',
                'db_table': 'bl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, default='chanell')),
                ('title', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_comm', models.BooleanField(blank=True, default=True)),
                ('owner', models.ForeignKey(blank=True, db_column='owner', null=True, on_delete=django.db.models.deletion.CASCADE, to='main.authuser')),
            ],
            options={
                'verbose_name': 'Канал',
                'verbose_name_plural': 'Каналы',
                'db_table': 'ch',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Comm',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(default='text', null=True)),
                ('bl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.bl')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.authuser')),
            ],
            options={
                'verbose_name': 'Коментарий',
                'verbose_name_plural': 'Коментарии',
                'db_table': 'Comm',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='bl',
            name='ch',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.ch'),
        ),
        migrations.AddField(
            model_name='bl',
            name='creator',
            field=models.ForeignKey(blank=True, db_column='creator', null=True, on_delete=django.db.models.deletion.CASCADE, to='main.authuser'),
        ),
        migrations.CreateModel(
            name='Subs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.ch')),
                ('user', models.ForeignKey(blank=True, db_column='owner', on_delete=django.db.models.deletion.CASCADE, to='main.authuser')),
            ],
            options={
                'verbose_name': 'Подписчик',
                'verbose_name_plural': 'Подписчики',
                'db_table': 'sub',
                'managed': True,
                'unique_together': {('user', 'ch')},
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_field', models.BooleanField(blank=True, db_column='create_', null=True)),
                ('update_field', models.BooleanField(blank=True, db_column='update_', null=True)),
                ('delete_comm', models.BooleanField(blank=True, null=True)),
                ('red_ch', models.BooleanField(blank=True, null=True)),
                ('ch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager_ch_set', to='main.ch')),
                ('email', models.ForeignKey(blank=True, db_column='email', null=True, on_delete=django.db.models.deletion.CASCADE, to='main.authuser')),
            ],
            options={
                'verbose_name': 'Менеджер',
                'verbose_name_plural': 'Менеджеры',
                'db_table': 'manager',
                'managed': True,
                'unique_together': {('email', 'ch')},
            },
        ),
        migrations.CreateModel(
            name='LikeDisShareBl',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.authuser')),
                ('is_like', models.BooleanField(blank=True, null=True)),
                ('is_dis', models.BooleanField(blank=True, null=True)),
                ('is_share', models.BooleanField(blank=True, null=True)),
                ('bl', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.bl')),
            ],
            options={
                'verbose_name': 'Лайк,дизлайк,поделится для блога',
                'verbose_name_plural': 'Лайк,дизлайк,поделится для блога',
                'db_table': 'like_dis_share_bl',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LikeDisComm',
            fields=[
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='main.authuser')),
                ('is_like', models.BooleanField(blank=True, null=True)),
                ('is_dis', models.BooleanField(blank=True, null=True)),
                ('comm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.comm')),
            ],
            options={
                'verbose_name': 'Лайк,дизлайк для коментариев',
                'verbose_name_plural': 'Лайк,дизлайк для коментариев',
                'db_table': 'like_dis_comm',
                'managed': True,
            },
        ),
    ]
